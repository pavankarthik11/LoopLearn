import { DailyEventObject } from '@daily-co/daily-js';
interface UseNetworkArgs {
    onNetworkConnection?(ev: DailyEventObject<'network-connection'>): void;
    onNetworkQualityChange?(ev: DailyEventObject<'network-quality-change'>): void;
}
/**
 * Returns current information about network quality and topology.
 * Allows to setup event listeners for daily's [network events](https://docs.daily.co/reference/daily-js/events/network-events).
 */
export declare const useNetwork: ({ onNetworkConnection, onNetworkQualityChange, }?: UseNetworkArgs) => {
    getStats: () => Promise<Record<string, never> | import("@daily-co/daily-js").DailyNetworkStatsData | undefined>;
    networkState: "unknown" | "good" | "warning" | "bad";
    networkStateReasons: import("@daily-co/daily-js").networkStateReasons[];
    quality: number;
    threshold: "good" | "low" | "very-low";
    topology: "none" | import("@daily-co/daily-js").DailyNetworkTopology;
};
export {};
